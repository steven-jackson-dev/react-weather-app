{"version":3,"sources":["components/AppFooter/index.js","pages/WeatherApp/components/WeatherSearch/WeatherSearchItem/index.js","api/index.js","pages/WeatherApp/components/WeatherSearch/index.js","utils/hooks/useInputState.js","global/AppRoutes.module.js","pages/WeatherApp/index.js","components/AppNavBar/index.js","components/AppHeader/index.js","components/AppLoadingSpinner/index.js","global/AppRenderRoutes.module.js","App.js","utils/common/index.js","index.js"],"names":["AppFooter","style","textAlign","margin","WeatherSearchItem","data","coord","weather","main","sys","wind","imgSrc","Row","Col","Card","padding","md","xs","Img","variant","src","Text","description","Title","name","country","lon","lat","temp","temp_min","temp_max","speed","pressure","humidity","searchCities","searchTerms","a","query","apiUrl","axios","get","console","log","WeatherSearch","initialVal","useState","state","setState","e","target","value","useInputState","searchInput","setSearchInput","isLoading","toggleIsLoading","cityData","setCityData","handleOnSubmit","preventDefault","res","warn","noGutters","Form","onSubmit","FormControl","placeholder","aria-label","aria-describedby","onChange","AppLoadingSpinner","AppRoutes","id","path","page","className","AppNavBar","props","Navbar","bg","Brand","href","Nav","map","route","Item","key","to","textDecoration","color","AppHeader","index","Spinner","animation","role","AppRenderRoutes","location","useLocation","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","exact","component","render","App","Container","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.33ed2f80.chunk.js","sourcesContent":["import React from 'react'\r\nconst AppFooter = () => {\r\n    return (\r\n        <footer style={{ textAlign: 'center', margin: '2em 0' }}>\r\n                Steven Jackson - 2020\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default AppFooter\r\n","import React from 'react'\r\nimport { Card, Row, Col, } from 'react-bootstrap'\r\n\r\nconst WeatherSearchItem = ({ data }) => {\r\n    const { coord, weather, main, sys, wind} = data;\r\n    const imgSrc = `https://via.placeholder.com/200x200.png?text=${weather[0].main}`\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Card style={{ padding: '1em' }}>\r\n                    <Row>\r\n                        <Col md={3} xs={12}>\r\n                            <Card.Img variant=\"top\" src={imgSrc} />\r\n                            <Card.Text style={{ textAlign: 'center' }}>\r\n                                {weather[0].description}\r\n                            </Card.Text>\r\n                        </Col>\r\n                        <Col md={9} xs={12}  style={{ padding: '0 2em' }}>\r\n                            <Card.Title>{data.name} <small>({sys.country})</small></Card.Title>\r\n                            <Card.Text>\r\n                                Longitude: {coord.lon}, Latitute:  {coord.lat}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Current Temp: {main.temp}<br />\r\n                                Min Temp: {main.temp_min}<br />\r\n                                Max Temp:  {main.temp_max}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Wind Speed: {wind.speed}<br />\r\n                                Pressure: {main.pressure}<br />\r\n                                Humidity:  {main.humidity}\r\n                            </Card.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\nexport default WeatherSearchItem\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst settings = '&units=metric';\r\nconst appId = '&appid=22a7e3afef01d4ef350bfb07c8081860';\r\n\r\nexport const searchCities = async (searchTerms) => {\r\nconst query = `?q=${searchTerms}`;\r\nconst apiUrl = `${url}${query}${appId}${settings}`\r\n    try {\r\n        const {data} = await axios.get(apiUrl)\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"fetchData -> error\", error)\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport useInputState from 'utils/hooks/useInputState'\r\nimport { Row, Form, FormControl, Col } from 'react-bootstrap'\r\nimport WeatherSearchItem from './WeatherSearchItem'\r\nimport { AppLoadingSpinner } from 'components'\r\nimport { searchCities } from 'api'\r\n\r\nconst WeatherSearch = () => {\r\n\r\n    const [searchInput, setSearchInput] = useInputState(\"\")\r\n    const [isLoading, toggleIsLoading] = useState(false)\r\n    const [cityData, setCityData] = useState(null)\r\n    console.log(\"WeatherSearch -> cityData\", cityData)\r\n\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        toggleIsLoading(true)\r\n        try {\r\n            const res = await searchCities(searchInput);\r\n            setCityData(res)\r\n            toggleIsLoading(false)\r\n        } catch (error) {\r\n            console.warn(\"handleOnSubmit -> error\", error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row noGutters style={{ margin: '2em 0' }}>\r\n                <Col>\r\n                    <Form onSubmit={handleOnSubmit}>\r\n                        <FormControl\r\n                            placeholder=\"Search City\"\r\n                            aria-label=\"Search City\"\r\n                            aria-describedby=\"search-city\"\r\n                            onChange={setSearchInput}\r\n                        />\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            {!isLoading &&\r\n                <Row>\r\n                    <Col>\r\n                        {cityData &&\r\n                            <WeatherSearchItem data={cityData} />\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            }\r\n\r\n            {isLoading &&\r\n                <Row style={{ textAlign: 'center', margin: '2em 0' }}>\r\n                    <Col>\r\n                        <AppLoadingSpinner />\r\n                    </Col>\r\n                </Row>\r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherSearch\r\n","import { useState } from 'react'\r\nexport default initialVal => {\r\n    const [state, setState] = useState(initialVal);\r\n\r\n    const handleChange = e => {\r\n        setState(e.target.value)\r\n    }\r\n    return [state, handleChange]\r\n}","import WeatherApp from \"pages/WeatherApp\"\r\nconst AppRoutes = [\r\n    {\r\n        id: 'weather-app',\r\n        name: 'Weather App',\r\n        path: '/',\r\n        page: WeatherApp\r\n    },\r\n]\r\nexport default AppRoutes\r\n","import React from 'react'\r\nimport WeatherSearch from './components/WeatherSearch/index';\r\n\r\nconst WeatherApp = () => {\r\n\r\n    return (\r\n        <div className=\"WeatherApp\">\r\n            <WeatherSearch />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherApp\r\n","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport AppRoutes from 'global/AppRoutes.module'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AppNavBar = (props) => {\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">React Weather App</Navbar.Brand>\r\n            <Nav className=\"ml-auto\">\r\n                {AppRoutes.map(route => {\r\n                    return <Nav.Item  key={route.id} href=\"#home\">\r\n                        <Link to={route.path} style={{ textDecoration: 'none', color: 'white', padding: '1em' }}>{route.name}</Link>\r\n                        </Nav.Item >\r\n                })}\r\n            </Nav>\r\n        </Navbar>\r\n\r\n    );\r\n}\r\n\r\nexport default AppNavBar\r\n","import React from 'react'\r\nimport AppNavBar from 'components/AppNavBar'\r\n\r\nconst AppHeader = () => {\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <AppNavBar/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport { Spinner} from 'react-bootstrap'\r\n\r\nconst index = () => {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React from 'react'\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport AppRoutes from 'global/AppRoutes.module'\r\n\r\nconst AppRenderRoutes = () => {\r\n    let location = useLocation();\r\n    return (\r\n        <TransitionGroup>\r\n            <CSSTransition\r\n                key={location.id}\r\n                classNames=\"fade\"\r\n                timeout={{ enter: 800, exit: 0 }}>\r\n                <Switch location={location}>\r\n                    {AppRoutes.map(route => {\r\n                        return <Route key={route.id} exact path={route.path} component={route.page} />\r\n                    })}\r\n                    <Route exact path='' render={() => `404 - Page Not Found`} />\r\n                </Switch>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\n\r\nexport default AppRenderRoutes\r\n","import React from 'react';\r\nimport { reusableFunction } from 'utils/common'\r\nimport { AppHeader, AppFooter } from 'components';\r\nimport AppRenderRoutes from 'global/AppRenderRoutes.module';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'global/global.css';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n  reusableFunction()\r\n  return (\r\n    <div className=\"App\">\r\n      <AppHeader />\r\n      <Container>\r\n        <AppRenderRoutes />\r\n      </Container>\r\n      <AppFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const reusableFunction = () => {\r\n    // Usage in App.js file\r\n    console.log('%c Reusable Function usage in the App.js file ', 'background: #222; color: #bada55');\r\n    console.log('%c Please let me know of any improvements!', 'background: #222; color: #bada55');\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename='/react-weather-app'>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n"],"sourceRoot":""}